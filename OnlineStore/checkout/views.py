from django.contrib import messages
from django.contrib.auth.decorators import login_required
from django.shortcuts import get_object_or_404, redirect, render
from cart.views import Cart
from .forms import OrderCreateForm
from .models import Order, OrderItem, ShippingAddress


@login_required
def checkout(request):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —á–µ–∫–∞—É—Ç–∞.
    """
    cart = Cart.objects.get(user=request.user)
    form = OrderCreateForm()
    context = {'cart': cart, 'form': form}

    return render(request, 'checkout/checkout.html', context)


@login_required
def thank_you(request, order_id):
    """
    –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∑–∞ –∑–∞–∫–∞–∑.
    """
    order = get_object_or_404(Order, id=order_id, user=request.user)
    return render(request, 'checkout/thank_you.html', {'order': order})



@login_required
def create_order(request):
    cart = get_object_or_404(Cart, user=request.user)

    if cart.items.exists() and request.method == 'POST':
        form = OrderCreateForm(request.POST)
        if form.is_valid():
            order = Order.objects.create(
                payment_method=form.cleaned_data['payment_method'],
                user=request.user,
            )

            ShippingAddress.objects.create(
                first_name=form.cleaned_data['first_name'],
                last_name=form.cleaned_data['last_name'],
                phone=form.cleaned_data['phone'],
                address_line_1=form.cleaned_data['address_line_1'],
                address_line_2=form.cleaned_data['address_line_2'],
                order=order,
            )

            for cart_item in cart.items.all():
                OrderItem.objects.create(
                    order=order,
                    item=cart_item.item,
                    quantity=cart_item.quantity,
                    price=cart_item.item.price
                )

            # ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
            import asyncio
            from users.views import send_telegram_message  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é

            message = f"üõç –ù–æ–≤—ã–π –∑–∞–∫–∞–∑! üõç\n" \
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {request.user.username}\n" \
                    f"–°—É–º–º–∞: {sum(item.price * item.quantity for item in order.items.all())} —Ä—É–±.\n" \
                    f"–¢–µ–ª–µ—Ñ–æ–Ω: {form.cleaned_data['phone']}\n" \
                    f"–ê–¥—Ä–µ—Å: {form.cleaned_data['address_line_1']}, {form.cleaned_data['address_line_2']}\n" \
                    f"–¢–æ–≤–∞—Ä—ã:\n"

            for item in order.items.all():
                message += f" - {item.item.title} ({item.quantity} —à—Ç.)\n"

            asyncio.run(send_telegram_message(message))

            cart.clear()
            return redirect('checkout:thank_you', order_id=order.id)
    else:
        form = OrderCreateForm()

    messages.warning(
        request, '–§–æ—Ä–º–∞ –Ω–µ –±—ã–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –µ—â–µ —Ä–∞–∑')
    context = {'form': form, 'cart': cart}
    return render(request, 'checkout/checkout.html', context)
